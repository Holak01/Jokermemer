# Generated by Scrape::ApiDefinitionsJob: 2018-09-25 01:15:43 UTC
# See: https://git.io/vx5CY
---
- name: Tags API
  description: Used to lookup information about tags, posts, and discussions. **These
    AppBase API methods are still under development and subject to change.**
  methods:
  - api_method: tags_api.get_active_votes
    purpose: Returns all votes for the given post.
    parameter_json: '{"author":"","permlink":""}'
    expected_response_json: |
      {
        "votes": [
          {
            "voter": "",
            "weight": 0,
            "rshares": 0,
            "percent": 0,
            "reputation": 0,
            "time": "2019-12-20T21:49:06"
          }
        ]
      }
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_active_votes", "params":{"author":"hiveio",
      "permlink":"firstpost"}, "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_active_votes", "params":{"author":"alice",
      "permlink":"a-post-by-alice"}, "id":1}'
    expected_curl_responses:
    - 
    - 'unknown key:unknown key:'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-active-votes)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-active-votes)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_comment_discussions_by_payout
    since: HF17
    purpose: Returns a list of discussions based on payout.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}' # TODO - recheck in HF23
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_comment_discussions_by_payout", "params":{"tag":"steem","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_comment_discussions_by_payout", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-comment-discussions-by-payout)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-comment-discussions-by-payout)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_content_replies
    purpose: Returns a list of replies.
    parameter_json: '{"author":"","permlink":""}'
    expected_response_json: '{"discussions":[]}' # TODO - recheck in HF23
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_content_replies", "params":{"author":"hiveio",
      "permlink":"firstpost"}, "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_content_replies", "params":{"author":"alice",
      "permlink":"a-post-by-alice"}, "id":1}'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-content-replies)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-content-replies)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_discussion
    purpose: |
      Returns the discussion given an author and permlink.
      
      Also see: [bridge.get_discussion]({{ '/apidefinitions/#bridge.get_discussion' | relative_url }})
    parameter_json: '{"author":"","permlink":""}'
    expected_response_json: |
      {
        "id": 0,
        "author": "",
        "permlink": "",
        "category": "",
        "parent_author": "",
        "parent_permlink": "",
        "title": "",
        "body": "",
        "json_metadata": "",
        "last_update": "1970-01-01T00:00:00",
        "created": "1970-01-01T00:00:00",
        "active": "1970-01-01T00:00:00",
        "last_payout": "1970-01-01T00:00:00",
        "depth": 0,
        "children": 0,
        "net_rshares": 0,
        "abs_rshares": 0,
        "vote_rshares": 0,
        "children_abs_rshares": 0,
        "cashout_time": "1970-01-01T00:00:00",
        "max_cashout_time": "1970-01-01T00:00:00",
        "total_vote_weight": 0,
        "reward_weight": 0,
        "total_payout_value": {
          "amount": "0",
          "precision": 3,
          "nai": "@@000000021"
        },
        "curator_payout_value": {
          "amount": "0",
          "precision": 3,
          "nai": "@@000000021"
        },
        "author_rewards": 0,
        "net_votes": 0,
        "root_author": "",
        "root_permlink": "",
        "max_accepted_payout": {
          "amount": "0",
          "precision": 3,
          "nai": "@@000000021"
        },
        "percent_hbd": 0,
        "allow_replies": false,
        "allow_votes": false,
        "allow_curation_rewards": false,
        "beneficiaries": [],
        "url": "",
        "root_title": "",
        "pending_payout_value": {
          "amount": "0",
          "precision": 3,
          "nai": "@@000000021"
        },
        "total_pending_payout_value": {
          "amount": "0",
          "precision": 3,
          "nai": "@@000000021"
        },
        "active_votes": [],
        "replies": [],
        "author_reputation": 0,
        "promoted": {
          "amount": "0",
          "precision": 3,
          "nai": "@@000000013"
        },
        "body_length": 0,
        "reblogged_by": []
      }
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussion", "params":{"author":"hiveio",
      "permlink":"firstpost"}, "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussion", "params":{"author":"alice",
      "permlink":"a-post-by-alice"}, "id":1}'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-discussions-by-trending)'
      - '[beem](https://beem.readthedocs.io/en/latest/beem.discussions.html#beem.discussions.Discussions.get_discussions)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_discussions_by_active
    purpose: Returns a list of discussions based on active.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: |
      {
        "discussions": [
          {
            "id": 0,
            "author": "",
            "permlink": "",
            "category": "",
            "parent_author": "",
            "parent_permlink": "",
            "title": "",
            "body": "",
            "json_metadata": "",
            "last_update": "2019-12-20T14:30:33",
            "created": "2019-12-17T14:44:51",
            "active": "2019-12-20T14:30:33",
            "last_payout": "2019-12-17T15:44:51",
            "depth": 0,
            "children": 0,
            "net_rshares": 0,
            "abs_rshares": 0,
            "vote_rshares": 0,
            "children_abs_rshares": 0,
            "cashout_time": "1969-12-31T23:59:59",
            "max_cashout_time": "1969-12-31T23:59:59",
            "total_vote_weight": 0,
            "reward_weight": 10000,
            "total_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "curator_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "author_rewards": 0,
            "net_votes": 0,
            "root_author": "",
            "root_permlink": "",
            "max_accepted_payout": {
              "amount": "1000000000",
              "precision": 3,
              "nai": "@@000000013"
            },
            "percent_hbd": 10000,
            "allow_replies": true,
            "allow_votes": true,
            "allow_curation_rewards": true,
            "beneficiaries": [],
            "url": "",
            "root_title": "",
            "pending_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "total_pending_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000021"
            },
            "active_votes": [],
            "replies": [],
            "author_reputation": 0,
            "promoted": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "body_length": 0,
            "reblogged_by": []
          }
        ]
      }
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_active", "params":{"tag":"steem","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_active", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-discussions-by-active)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-discussions-by-active)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_discussions_by_author_before_date
    purpose: |
      Returns a list of discussions based on author before date.
      
      Also see: [Paginated API Methods]({{ '/tutorials-recipes/paginated-api-methods.html#tags_apiget_discussions_by_author_before_date' | relative_url }})
    parameter_json: '{"author":"","start_permlink":"","before_date":"1970-01-01T00:00:00","limit":100}'
    expected_response_json: |
      {
        "discussions": [
          {
            "id": 0,
            "author": "",
            "permlink": "",
            "category": "",
            "parent_author": "",
            "parent_permlink": "",
            "title": "",
            "body": "",
            "json_metadata": "",
            "last_update": "2019-12-20T21:54:33",
            "created": "2019-12-20T21:53:03",
            "active": "2019-12-20T21:54:33",
            "last_payout": "1970-01-01T00:00:00",
            "depth": 0,
            "children": 0,
            "net_rshares": 0,
            "abs_rshares": 0,
            "vote_rshares": 0,
            "children_abs_rshares": 0,
            "cashout_time": "2019-12-20T22:53:03",
            "max_cashout_time": "1969-12-31T23:59:59",
            "total_vote_weight": 0,
            "reward_weight": 10000,
            "total_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "curator_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "author_rewards": 0,
            "net_votes": 0,
            "root_author": "",
            "root_permlink": "",
            "max_accepted_payout": {
              "amount": "1000000000",
              "precision": 3,
              "nai": "@@000000013"
            },
            "percent_hbd": 0,
            "allow_replies": true,
            "allow_votes": true,
            "allow_curation_rewards": true,
            "beneficiaries": [
              {
                "account": "",
                "weight": 0
              }
            ],
            "url": "",
            "root_title": "",
            "pending_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "total_pending_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000021"
            },
            "active_votes": [
              {
                "voter": "",
                "weight": 0,
                "rshares": 0,
                "percent": 0,
                "reputation": 0,
                "time": "2019-12-20T21:57:51"
              }
            ],
            "replies": [],
            "author_reputation": 0,
            "promoted": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "body_length": 0,
            "reblogged_by": []
          }
        ]
      }
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_author_before_date",
      "params":{"author":"hiveio","start_permlink":"firstpost","before_date":"2016-04-19T22:49:43","limit":1},
      "id":1}'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-discussions-by-author-before-date)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-discussions-by-author-before-date)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_discussions_by_blog
    purpose: Returns a list of discussions by blog.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: |
      {
        "discussions": [
          {
            "id": 0,
            "author": "",
            "permlink": "",
            "category": "",
            "parent_author": "",
            "parent_permlink": "",
            "title": "",
            "body": "",
            "json_metadata": "",
            "last_update": "2019-12-20T21:54:33",
            "created": "2019-12-20T21:53:03",
            "active": "2019-12-20T21:54:33",
            "last_payout": "1970-01-01T00:00:00",
            "depth": 0,
            "children": 0,
            "net_rshares": 0,
            "abs_rshares": 0,
            "vote_rshares": 0,
            "children_abs_rshares": 0,
            "cashout_time": "2019-12-20T22:53:03",
            "max_cashout_time": "1969-12-31T23:59:59",
            "total_vote_weight": 0,
            "reward_weight": 10000,
            "total_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "curator_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "author_rewards": 0,
            "net_votes": 0,
            "root_author": "",
            "root_permlink": "",
            "max_accepted_payout": {
              "amount": "1000000000",
              "precision": 3,
              "nai": "@@000000013"
            },
            "percent_hbd": 0,
            "allow_replies": true,
            "allow_votes": true,
            "allow_curation_rewards": true,
            "beneficiaries": [
              {
                "account": "",
                "weight": 0
              }
            ],
            "url": "",
            "root_title": "",
            "pending_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "total_pending_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000021"
            },
            "active_votes": [
              {
                "voter": "",
                "weight": 0,
                "rshares": 0,
                "percent": 0,
                "reputation": 0,
                "time": "2019-12-20T21:57:51"
              }
            ],
            "replies": [],
            "author_reputation": 0,
            "promoted": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "body_length": 0,
            "reblogged_by": []
          }
        ]
      }
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_blog", "params":{"tag":"hiveio","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_blog", "params":{"tag":"alice","limit":10},
      "id":1}'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-discussions-by-blog)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-discussions-by-blog)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_discussions_by_cashout
    purpose: Returns a list of discussions by cashout.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}'
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_cashout", "params":{"tag":"steem","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_cashout", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-discussions-by-cashout)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-discussions-by-cashout)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_discussions_by_children
    purpose: Returns a list of discussions by children.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: |
      {
        "discussions": [
          {
            "id": 0,
            "author": "",
            "permlink": "",
            "category": "",
            "parent_author": "",
            "parent_permlink": "",
            "title": "",
            "body": "",
            "json_metadata": "",
            "last_update": "2019-12-20T21:54:33",
            "created": "2019-12-20T21:53:03",
            "active": "2019-12-20T21:54:33",
            "last_payout": "1970-01-01T00:00:00",
            "depth": 0,
            "children": 0,
            "net_rshares": 0,
            "abs_rshares": 0,
            "vote_rshares": 0,
            "children_abs_rshares": 0,
            "cashout_time": "2019-12-20T22:53:03",
            "max_cashout_time": "1969-12-31T23:59:59",
            "total_vote_weight": 0,
            "reward_weight": 10000,
            "total_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "curator_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "author_rewards": 0,
            "net_votes": 0,
            "root_author": "",
            "root_permlink": "",
            "max_accepted_payout": {
              "amount": "1000000000",
              "precision": 3,
              "nai": "@@000000013"
            },
            "percent_hbd": 0,
            "allow_replies": true,
            "allow_votes": true,
            "allow_curation_rewards": true,
            "beneficiaries": [
              {
                "account": "",
                "weight": 0
              }
            ],
            "url": "",
            "root_title": "",
            "pending_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "total_pending_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000021"
            },
            "active_votes": [
              {
                "voter": "",
                "weight": 0,
                "rshares": 0,
                "percent": 0,
                "reputation": 0,
                "time": "2019-12-20T21:57:51"
              }
            ],
            "replies": [],
            "author_reputation": 0,
            "promoted": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "body_length": 0,
            "reblogged_by": []
          }
        ]
      }
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_children", "params":{"tag":"steem","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_children", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-discussions-by-children)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-discussions-by-children)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_discussions_by_comments
    purpose: Returns a list of discussions by comments.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: |
      {
        "discussions": [
          {
            "id": 0,
            "author": "",
            "permlink": "",
            "category": "",
            "parent_author": "",
            "parent_permlink": "",
            "title": "",
            "body": "",
            "json_metadata": "",
            "last_update": "2019-12-20T12:34:27",
            "created": "2019-12-20T12:34:27",
            "active": "2019-12-20T12:34:27",
            "last_payout": "2019-12-20T13:34:27",
            "depth": 0,
            "children": 0,
            "net_rshares": 0,
            "abs_rshares": 0,
            "vote_rshares": 0,
            "children_abs_rshares": 0,
            "cashout_time": "1969-12-31T23:59:59",
            "max_cashout_time": "1969-12-31T23:59:59",
            "total_vote_weight": 0,
            "reward_weight": 10000,
            "total_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "curator_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "author_rewards": 0,
            "net_votes": 0,
            "root_author": "",
            "root_permlink": "",
            "max_accepted_payout": {
              "amount": "1000000000",
              "precision": 3,
              "nai": "@@000000013"
            },
            "percent_hbd": 10000,
            "allow_replies": true,
            "allow_votes": true,
            "allow_curation_rewards": true,
            "beneficiaries": [],
            "url": "",
            "root_title": "",
            "pending_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "total_pending_payout_value": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000021"
            },
            "active_votes": [],
            "replies": [],
            "author_reputation": 0,
            "promoted": {
              "amount": "0",
              "precision": 3,
              "nai": "@@000000013"
            },
            "body_length": 0,
            "reblogged_by": []
          }
        ]
      }
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_comments", "params":{"start_author":"hiveio","start_permlink":"firstpost","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_comments", "params":{"start_author":"alice","start_permlink":"a-post-by-alice","limit":10,"truncate_body":0},
      "id":1}'
    expected_curl_responses:
    - 
    - Comment is not in account's comments
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-discussions-by-comments)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-discussions-by-comments)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_discussions_by_created
    purpose: Returns a list of discussions by created.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}' # TODO - recheck in HF23
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_created", "params":{"tag":"steem","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_created", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-discussions-by-created)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-discussions-by-created)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_discussions_by_feed
    since: HF14
    purpose: Returns a list of discussions by feed.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}' # TODO - recheck in HF23
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_feed", "params":{"tag":"steem","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_feed", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-discussions-by-feed)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-discussions-by-feed)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_discussions_by_hot
    purpose: Returns a list of discussions by hot.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}' # TODO - recheck in HF23
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_hot", "params":{"tag":"steem","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_hot", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-discussions-by-hot)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-discussions-by-hot)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_discussions_by_promoted
    since: HF13
    purpose: Returns a list of discussions by promoted.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}' # TODO - recheck in HF23
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_promoted", "params":{"tag":"steem","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_promoted", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-discussions-by-promoted)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-discussions-by-promoted)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_discussions_by_trending
    purpose: Returns a list of discussions by trending.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}' # TODO - recheck in HF23
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_trending", "params":{"tag":"steem","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_trending", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-discussions-by-trending)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-discussions-by-trending)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_discussions_by_votes
    purpose: Returns a list of discussions by votes.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}' # TODO - recheck in HF23
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_votes", "params":{"tag":"steem","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_discussions_by_votes", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-discussions-by-votes)'
      - '[beem](https://beem.readthedocs.io/en/latest/apidefinitions.html#get-discussions-by-votes)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_post_discussions_by_payout
    since: HF17
    purpose: Returns a list of post discussions by payout.
    parameter_json: '{"tag":"","limit":0,"filter_tags":[],"select_authors":[],"select_tags":[],"truncate_body":0}'
    expected_response_json: '{"discussions":[]}' # TODO - recheck in HF23
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_post_discussions_by_payout", "params":{"tag":"steem","limit":1},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_post_discussions_by_payout", "params":{"tag":"photography","limit":10,"truncate_body":0},
      "id":1}'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-discussions-by-payout)'
      - '[beem](https://beem.readthedocs.io/en/latest/beem.discussions.html#beem.discussions.Post_discussions_by_payout)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_replies_by_last_update
    purpose: |
      Returns a list of replies by last update.
      
      Also see: [Paginated API Methods]({{ '/tutorials-recipes/paginated-api-methods.html#tags_apiget_replies_by_last_update' | relative_url }})
    parameter_json: '{"start_parent_author":"","start_permlink":"","limit":100}'
    expected_response_json: '{"discussions":[]}' # TODO - recheck in HF23
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_replies_by_last_update", "params":{"start_parent_author":"hiveio","start_permlink":"firstpost","limit":1},
      "id":1}'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#content)'
      - '[beem](https://beem.readthedocs.io/en/latest/beem.discussions.html#beem.discussions.Replies_by_last_update)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_tags_used_by_author
    purpose: Returns a list of tags used by an author.
    parameter_json: '{"author":""}'
    expected_response_json: '{"tags":[]}' # TODO - recheck in HF23
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_tags_used_by_author", "params":{"author":"hiveio"},
      "id":1}'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#tags)'
      - '[beem](https://beem.readthedocs.io/en/latest/beem.account.html#beem.account.Account.get_tags_used_by_author)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
  - api_method: tags_api.get_trending_tags
    purpose: |
      Returns the list of trending tags.
      
      Also see: [Paginated API Methods]({{ '/tutorials-recipes/paginated-api-methods.html#tags_apiget_trending_tags' | relative_url }})
    parameter_json: '{"start_tag":"","limit":100}'
    expected_response_json: '{"tags":[]}' # TODO - recheck in HF23
    curl_examples:
    - '{"jsonrpc":"2.0", "method":"tags_api.get_trending_tags", "params":{"start_tag":null,"limit":100},
      "id":1}'
    - '{"jsonrpc":"2.0", "method":"tags_api.get_trending_tags", "params":{"start_tag":"steem","limit":10},
      "id":1}'
    client_docs:
      - '[hive-js](https://gitlab.syncad.com/hive/hive-js/tree/master/doc#get-trending-tags)'
      - '[beem](https://beem.readthedocs.io/en/latest/beem.discussions.html#beem.discussions.Trending_tags)'
      - '[hive-ruby](https://www.rubydoc.info/gems/hive-ruby/Hive/Api)'
